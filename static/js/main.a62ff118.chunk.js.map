{"version":3,"sources":["DonutChart.js","LolipopChart.js","BubbleChart.js","App.js","serviceWorker.js","index.js"],"names":["DonutChart","drawChart","d3","remove","svg","append","attr","colorScale","domain","range","interpolate","arc","innerRadius","width","outerRadius","pie","startAngle","Math","PI","endAngle","value","d","count","padAngle","sort","selectAll","data","props","chartData","enter","style","i","each","newArc","exec","this","replace","newStart","newEnd","donutTip","on","transition","duration","num","event","html","text","prevProps","equal","console","log","id","className","Component","LolipopChart","margin","height","x","map","college","padding","call","tickSize","y","ticks","tickFormat","BubbleChart","dataset","color","bubble","size","nodes","sum","node","descendants","filter","children","r","substring","window","self","frameElement","diameter","App","state","hospiChartData","toggle","handleData","JSON","parse","type","dict","finalData","undefined","Object","keys","forEach","key","temp","push","setState","handleClick","url","onMessage","bind","marginTop","React","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a62ff118.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport equal from 'fast-deep-equal'\nimport * as d3 from 'd3'\nclass DonutChart extends Component {\n\ncomponentDidUpdate(prevProps) {\n    if(!equal(this.props.chartData, prevProps.chartData)) // Check if it's a new user, you can also use some unique property, like the ID  (this.props.user.id !== prevProps.user.id)\n    {\n\t\tconsole.log(this.props.chartData)\n      this.drawChart();\n    }\n  } \n  \ndrawChart = () =>{\n    d3.selectAll(\".donut\").remove()\n    var width = 420;\n    var height = 420;\n\n    var svg = d3.select('#donutchart')\n        .append('svg')\n        .attr('class','donut')\n        .attr('width', width)\n        .attr('height', height)\n        .append('g')\n        .attr('transform', 'translate(' + (width / 2) +\n            ',' + (height / 2) + ')');\n\n\n\n\t\t//Create a color scale\n\t\tvar colorScale = d3.scaleLinear()\n\t\t   .domain([1,3.5,6])\n\t\t   .range([\"#2c7bb6\", \"#ffffbf\", \"#d7191c\"])\n\t\t   .interpolate(d3.interpolateHcl);\n\n\t\t//Create an arc function   \n\t\tvar arc = d3.arc()\n\t\t\t.innerRadius(width*0.75/2) \n\t\t\t.outerRadius(width*0.75/2 + 30);\n\n\t\t//Turn the pie chart 90 degrees counter clockwise, so it starts at the left\t\n\t\tvar pie = d3.pie()\n\t\t\t.startAngle(-90 * Math.PI/180)\n\t\t\t.endAngle(-90 * Math.PI/180 + 2*Math.PI)\n\t\t\t.value(function(d) { return d.count *5; })\n\t\t\t.padAngle(.01)\n\t\t\t.sort(null);\n\t\t\n\t\tsvg.selectAll(\".donutArcs\")\n\t\t\t.data(pie(this.props.chartData))\n\t\t  .enter().append(\"path\")\n\t\t\t.attr(\"class\", \"donutArcs\")\n\t\t\t.attr(\"d\", arc)\n\t\t\t.style(\"fill\", function(d,i) {\n\t\t\t\tif(i === 7) return \"#CCCCCC\"; //Other\n\t\t\t\telse return colorScale(i); \n\t\t\t})\n\t\t.each(function(d,i) {\n\t\t\t//Search pattern for everything between the start and the first capital L\n\t\t\tvar firstArcSection = /(^.+?)L/; \t\n\n\t\t\t//Grab everything up to the first Line statement\n\t\t\tvar newArc = firstArcSection.exec( d3.select(this).attr(\"d\") )[1];\n\t\t\t//Replace all the comma's so that IE can handle it\n\t\t\tnewArc = newArc.replace(/,/g , \" \");\n\t\t\t\n\t\t\t//If the end angle lies beyond a quarter of a circle (90 degrees or pi/2) \n\t\t\t//flip the end and start position\n\t\t\tif (d.endAngle > 90 * Math.PI/180) {\n\t\t\t\tvar startLoc \t= /M(.*?)A/,\t\t//Everything between the first capital M and first capital A\n\t\t\t\t\tmiddleLoc \t= /A(.*?)0 0 1/,\t//Everything between the first capital A and 0 0 1\n\t\t\t\t\tendLoc \t\t= /0 0 1 (.*?)$/;\t//Everything between the first 0 0 1 and the end of the string (denoted by $)\n\t\t\t\t//Flip the direction of the arc by switching the start en end point (and sweep flag)\n\t\t\t\t//of those elements that are below the horizontal line\n\t\t\t\tvar newStart = endLoc.exec( newArc )[1];\n\t\t\t\tvar newEnd = startLoc.exec( newArc )[1];\n\t\t\t\tvar middleSec = middleLoc.exec( newArc )[1];\n\t\t\t\t\n\t\t\t\t//Build up the new arc notation, set the sweep-flag to 0\n\t\t\t\tnewArc = \"M\" + newStart + \"A\" + middleSec + \"0 0 0 \" + newEnd;\n\t\t\t}//if\n\t\t\t\n\t\t\t//Create a new invisible arc that the text can flow along\n\t\t\tsvg.append(\"path\")\n\t\t\t\t.attr(\"class\", \"hiddenDonutArcs\")\n\t\t\t\t.attr(\"id\", \"donutArc\"+i)\n\t\t\t\t.attr(\"d\", newArc)\n\t\t\t\t.style(\"fill\", \"none\");\n        });\n        var donutTip = d3.select(\"#donuttip\")\n        svg.selectAll('path')\n\t\t.on('mouseover', function (d, i) {\n            d3.select(this).transition()\n                .duration('50')\n                .attr('opacity', '.85');\n            donutTip.transition()\n                .duration(50)\n                .style(\"opacity\", 1);\n            let num = \"<b>Event:</b> \"+d.data.event+\"<br/><b>Count:</b> \"+d.data.count\n            donutTip.html(num)\n                .style(\"left\", \"8%\")\n                .style(\"top\", \"55%\");\n        })\n\t\t//Append the label names on the outside\n\t\tsvg.selectAll(\".donutText\")\n\t\t\t.data(pie(this.props.chartData))\n\t\t   .enter().append(\"text\")\n\t\t\t.attr(\"class\", \"donutText\")\n\t\t\t//Move the labels below the arcs for those slices with an end angle greater than 90 degrees\n\t\t\t.attr(\"dy\", function(d,i) { return (d.endAngle > 90 * Math.PI/180 ? 18 : -11); })\n\t\t    .append(\"textPath\")\n\t\t\t.attr(\"startOffset\",\"50%\")\n\t\t\t.style(\"text-anchor\",\"middle\")\n\t\t\t.style(\"fill\",\"white\")\n\t\t\t.attr(\"xlink:href\",function(d,i){return \"#donutArc\"+i;})\n\t\t\t.text(function(d){return d.data.event;});\n\t\t\n\t\tsvg.selectAll(\".donutCount\")\n\t\t\t.data(pie(this.props.chartData))\n\t\t   .enter().append(\"text\")\n\t\t\t.attr(\"class\", \"donutCount\")\n\t\t\t//Move the labels below the arcs for those slices with an end angle greater than 90 degrees\n\t\t\t.attr(\"dy\", function(d,i) { return (d.endAngle > 90 * Math.PI/180 ? -11 : 20); })\n\t\t    .append(\"textPath\")\n\t\t\t.attr(\"startOffset\",\"50%\")\n\t\t\t.style(\"text-anchor\",\"middle\")\n\t\t\t.attr(\"xlink:href\",function(d,i){return \"#donutArc\"+i;})\n\t\t\t.text(function(d){return d.data.count;});\n}\n\n    render() {\n        return (\n            <div>\n                <div id=\"donutchart\"><div id=\"donuttip\" className=\"donut-tip\"></div></div>\n            </div>\n        )\n    }\n}\n\nexport default DonutChart\n","import React, { Component } from 'react'\nimport equal from 'fast-deep-equal'\nimport * as d3 from 'd3'\nclass LolipopChart extends Component {\ncomponentDidUpdate(prevProps) {\n    if(!equal(this.props.chartData, prevProps.chartData)) // Check if it's a new user, you can also use some unique property, like the ID  (this.props.user.id !== prevProps.user.id)\n    {\n        this.drawChart();\n        console.log(this.props.chartData)\n    }\n    }     \ndrawChart = () =>{\n    d3.selectAll(\".loli\").remove()    \nvar margin = {top: 50, right: 30, bottom: 20, left: 40},\nwidth = 400 - margin.left - margin.right,\nheight = 400 - margin.top - margin.bottom;\n\n// append the svg object to the body of the page\nvar svg = d3.select(\"#lolipop\")\n.append(\"svg\")\n.attr(\"class\",\"loli\")\n.attr(\"width\", width + margin.left + margin.right)\n.attr(\"height\", height + margin.top + margin.bottom)\n.append(\"g\")\n.attr(\"transform\",\n      \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Parse the Data\nlet data = this.props.chartData\n// X axis\nvar x = d3.scaleBand()\n.range([ 0, width ])\n.domain(data.map(function(d) { return d.college; }))\n.padding(1);\nsvg.append(\"g\")\n.attr(\"transform\", \"translate(0,\" + height + \")\")\n.attr(\"class\", \"axisRed\")\n.call(d3.axisBottom(x).tickSize(0))\n.selectAll(\"text\")\n.style(\"font-weight\",\"bold\")\n.style(\"fill\",\"white\")\n.attr(\"transform\", \"translate(4,-300)rotate(-90)\")\n.style(\"text-anchor\", \"end\")\n\n// Add Y axis\nvar y = d3.scaleLinear()\n.domain([0, d3.max(data, function (d) { return d.count; })])\n.range([ height, 0]);\nsvg.append(\"g\")\n.attr(\"class\", \"axisRed\")\n.call(d3.axisLeft(y).ticks(10).tickFormat(d3.format(\",d\")))\n.selectAll(\"text\")\n.style(\"fill\",\"white\");\n\n// Lines\nsvg.selectAll(\"myline\")\n.data(data)\n.enter()\n.append(\"line\")\n.attr(\"x1\", function(d) { return x(d.college); })\n.attr(\"x2\", function(d) { return x(d.college); })\n.attr(\"y1\", function(d) { return y(d.count); })\n.attr(\"y2\", y(0))\n.attr(\"stroke\", \"white\")\n\n// Circles\nsvg.selectAll(\"mycircle\")\n.data(data)\n.enter()\n.append(\"circle\")\n.attr(\"cx\", function(d) { return x(d.college); })\n.attr(\"cy\", function(d) { return y(d.count); })\n.attr(\"r\", \"4\")\n.style(\"fill\", \"#69b3a2\")\n.attr(\"stroke\", \"black\")\n\n\n}\n    \n    render() {\n        return (\n            <div>\n                <div id=\"lolipop\"></div>\n            </div>\n        )\n    }\n}\n\nexport default LolipopChart\n","import React, { Component } from 'react'\nimport equal from 'fast-deep-equal'\nimport * as d3 from 'd3'\nclass BubbleChart extends Component {\ncomponentDidUpdate(prevProps) {\n    if(!equal(this.props.chartData, prevProps.chartData)) // Check if it's a new user, you can also use some unique property, like the ID  (this.props.user.id !== prevProps.user.id)\n    {\n        this.drawChart();\n    }\n    }    \ndrawChart = () =>{\n    d3.selectAll(\".bubble\").remove()\n    var dataset = {};\n    dataset[\"children\"] = this.props.chartData\n    var diameter = 400;\n    var color = d3.scaleOrdinal(d3.schemeCategory10);\n\n    var bubble = d3.pack(dataset)\n        .size([diameter, diameter])\n        .padding(1.5);\n\n    var svg = d3.select(\"#bubble\")\n        .append(\"svg\")\n        .attr(\"width\", diameter)\n        .attr(\"height\", diameter)\n        .attr(\"class\", \"bubble\");\n\n    var nodes = d3.hierarchy(dataset)\n        .sum(function(d) { return d.count; });\n\n    var node = svg.selectAll(\".node\")\n        .data(bubble(nodes).descendants())\n        .enter()\n        .filter(function(d){\n            return  !d.children\n        })\n        .append(\"g\")\n        .attr(\"class\", \"node\")\n        .attr(\"transform\", function(d) {\n            return \"translate(\" + d.x + \",\" + d.y + \")\";\n        });\n\n    node.append(\"title\")\n        .text(function(d) {\n            return d.data.event + \": \" + d.data.count;\n        });\n\n    node.append(\"circle\")\n        .attr(\"r\", function(d) {\n            return d.r;\n        })\n        .style(\"fill\", function(d,i) {\n            return color(i);\n        });\n\n    node.append(\"text\")\n        .attr(\"dy\", \".2em\")\n        .style(\"text-anchor\", \"middle\")\n        .style(\"font-weight\",\"bold\")\n        .text(function(d) {\n            return d.data.event.substring(0, d.r / 5);\n        })\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"font-size\", function(d){\n            return d.r/3;\n        })\n        .attr(\"fill\", \"white\");\n\n    node.append(\"text\")\n        .attr(\"dy\", \"1.3em\")\n        .style(\"text-anchor\", \"middle\")\n        .text(function(d) {\n            return d.data.count;\n        })\n        .attr(\"font-family\",  \"Gill Sans\", \"Gill Sans MT\")\n        .attr(\"font-size\", function(d){\n            return d.r/3;\n        })\n        .attr(\"fill\", \"white\");\n\n    d3.select(window.self.frameElement)\n        .style(\"height\", diameter + \"px\");\n}\n    render() {\n        return (\n            <div>\n                <div id=\"bubble\"></div>\n            </div>\n        )\n    }\n}\n\nexport default BubbleChart\n","import React from 'react';\nimport './App.css';\nimport Websocket from 'react-websocket';\nimport DonutChart from './DonutChart';\nimport './back.css'\nimport LolipopChart from './LolipopChart';\nimport BubbleChart from './BubbleChart';\nclass App extends React.Component {\n  state = {\n    chartData:[],\n    hospiChartData:[],\n    toggle:false\n  }\n  handleData = (data) =>{\n    let chartData = JSON.parse(data)\n    if(chartData.type === \"hospitality\")\n    {\n      let dict = chartData.data\n      let finalData = []\n      if(dict !== undefined)\n      {\n        Object.keys(dict).forEach(function(key) {\n          let temp = {}\n          temp['college'] = key\n          temp['count'] = dict[key]\n          finalData.push(temp)\n        });\n      }\n        this.setState({hospiChartData:finalData})\n    }\n    else{\n      let dict = chartData.data\n      let finalData = []\n      if(dict !== undefined)\n      {\n        Object.keys(dict).forEach(function(key) {\n          let temp = {}\n          temp['event'] = key\n          temp['count'] = dict[key]\n          finalData.push(temp)\n        });\n      }\n      this.setState({chartData:finalData})\n     }\n  }\n  handleClick = () =>{\n      if(this.state.toggle)\n      this.setState({toggle:false})\n      else\n      this.setState({toggle:true})\n    \n  }\n\n  render(){\n  return (\n    <div className=\"App\">\n        <Websocket url= \"wss://k-data-api.herokuapp.com//ws/event/1/\"\n                onMessage={this.handleData.bind(this)}/>\n      <div className=\"loading wave\"> \n          K! Board  \n      </div>\n      <h2 style={{color:\"white\",marginTop:\"10%\"}}>Top 10</h2>\n      <div className=\"split\">\n        <div className=\"div\">\n          <DonutChart chartData={this.state.chartData}/>\n          </div>\n          <div className=\"div\">\n            <LolipopChart chartData={this.state.hospiChartData}/>     \n            </div>\n            <div className=\"div\">\n            <BubbleChart chartData={this.state.chartData}/>\n            </div>\n      </div>\n        <div style={{color:\"white\",marginTop:\"20px\"}}>Developed by Rogith and Srinivas Raman</div>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}